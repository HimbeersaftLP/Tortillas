diff --git a/userspace/tests/bad-exit-code.c b/userspace/tests/bad-exit-code.c
new file mode 100644
index 00000000..1440f771
--- /dev/null
+++ b/userspace/tests/bad-exit-code.c
@@ -0,0 +1,12 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo wrong exit code"
+*/
+
+#include "stdlib.h"
+
+int main()
+{
+  exit(3);
+}
diff --git a/userspace/tests/panic1.c b/userspace/tests/panic1.c
new file mode 100644
index 00000000..b795ee40
--- /dev/null
+++ b/userspace/tests/panic1.c
@@ -0,0 +1,12 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo a kernel panic triggered by exit(1)"
+*/
+
+#include "stdlib.h"
+
+int main()
+{
+  exit(1);
+}
diff --git a/userspace/tests/panic2.c b/userspace/tests/panic2.c
new file mode 100644
index 00000000..212af336
--- /dev/null
+++ b/userspace/tests/panic2.c
@@ -0,0 +1,12 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo a locking error triggered by exit(2)"
+*/
+
+#include "stdlib.h"
+
+int main()
+{
+  exit(2);
+}
diff --git a/userspace/tests/timeout.c b/userspace/tests/timeout.c
new file mode 100644
index 00000000..a5529935
--- /dev/null
+++ b/userspace/tests/timeout.c
@@ -0,0 +1,15 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo a test timeout"
+timeout: 20
+*/
+
+#include "stdlib.h"
+#include "sched.h"
+
+int main()
+{
+  while (1)
+    sched_yield();
+}
diff --git a/userspace/tests/unknown_command.c b/userspace/tests/unknown_command.c
new file mode 100644
index 00000000..e82bc6ba
--- /dev/null
+++ b/userspace/tests/unknown_command.c
@@ -0,0 +1,11 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo unknown command, when the test name comtains an underscore"
+*/
+
+#include "stdlib.h"
+
+int main()
+{
+}
diff --git a/userspace/tests/userspace-assert.c b/userspace/tests/userspace-assert.c
new file mode 100644
index 00000000..3fec85c0
--- /dev/null
+++ b/userspace/tests/userspace-assert.c
@@ -0,0 +1,12 @@
+/*
+---
+category: panic
+description: "Dummy test, to demo userspace asserts"
+*/
+
+#include "assert.h"
+
+int main()
+{
+  assert(1==2);
+}
